import type { StorybookConfig } from '@storybook/react-webpack5';

const config: StorybookConfig = {
  stories: ['../src/**/*.mdx', '../src/**/*.stories.@(js|jsx|mjs|ts|tsx)'],
  addons: [
    '@storybook/addon-webpack5-compiler-swc',
    '@storybook/addon-onboarding',
    '@storybook/addon-essentials',
    '@chromatic-com/storybook',
    '@storybook/addon-interactions',
  ],
  framework: {
    name: '@storybook/react-webpack5',
    options: {},
  },
  webpackFinal: async (config) => {
    // ‚úÖ –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ module –∏ module.rules —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    if (!config.module) {
      config.module = { rules: [] };
    }
    if (!config.module.rules) {
      config.module.rules = [];
    }

    // ‚úÖ –£–¥–∞–ª—è–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ Storybook'–æ–º –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è SVG –∏ –¥—Ä—É–≥–∏—Ö –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
    config.module.rules = config.module.rules.filter(
      (rule) =>
        rule &&
        typeof rule === 'object' &&
        'test' in rule &&
        rule.test instanceof RegExp &&
        !rule.test.toString().includes(
          '(svg|ico|jpg|jpeg|png|apng|gif|eot|otf|webp|ttf|woff|woff2|cur|ani|pdf)'
        )
    );

    // ‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ SVG –∫–∞–∫ React-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ (–µ—Å–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è —Å `?react`)
    config.module.rules.unshift({
      test: /\.svg$/i,
      oneOf: [
        {
          resourceQuery: /react/, // üî• `?react` ‚Üí –∏–º–ø–æ—Ä—Ç –∫–∞–∫ React-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç
          use: [
            {
              loader: '@svgr/webpack',
              options: {
                icon: true,
                esModule: true,
              },
            },
          ],
        },
        {
          // üî• –û–±—ã—á–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã SVG –±–µ–∑ `?react` ‚Üí –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –∫–∞–∫ —Ñ–∞–π–ª—ã
          type: 'asset/resource',
        },
      ],
    });

    // ‚úÖ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É PNG, JPG, —à—Ä–∏—Ñ—Ç–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
    config.module.rules.push({
      test: /\.(png|jpg|jpeg|gif|woff|woff2|eot|ttf)$/i,
      type: 'asset/resource',
    });

    // ‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ SCSS/SASS
    config.module.rules.push({
      test: /\.scss$/,
      use: ['style-loader', 'css-loader', 'sass-loader'],
    });

    // ‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Babel –¥–ª—è JS/TS —Ñ–∞–π–ª–æ–≤
    config.module.rules.push({
      test: /\.(ts|tsx|js|jsx)$/,
      exclude: /node_modules/,
      use: {
        loader: 'babel-loader',
      },
    });

    // ‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ alias
    if (!config.resolve) {
      config.resolve = {};
    }
    config.resolve = {
      ...config.resolve,
      extensions: ['.tsx', '.ts', '.js', '.jsx', '.scss', '.css', '.svg'],
      alias: {
        ...config.resolve?.alias,
        path: require.resolve('path-browserify'),
      },
    };

    return config;
  },
};

export default config;
